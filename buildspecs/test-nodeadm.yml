version: 0.2

env:
  secrets-manager:
    RHEL_USERNAME: "nodeadm-e2e-tests-redhat-credentials:username"
    RHEL_PASSWORD: "nodeadm-e2e-tests-redhat-credentials:password"

phases:
  pre_build:
    commands:
      - echo "Setting up for e2e tests..."
      - export BUILD_NUMBER=${CODEBUILD_BUILD_NUMBER:-1}
      - export VERSION="build-${BUILD_NUMBER}"

  build:
    commands:
      # Upload binaries to versioned paths
      - echo "Uploading binaries for e2e tests..."
      - aws s3 cp --no-progress --content-encoding gzip --content-disposition "attachment; filename=\"nodeadm\"" _bin/amd64/nodeadm.gz s3://$ARTIFACTS_BUCKET/test-release/${VERSION}/bin/linux/amd64/nodeadm.gz
      - aws s3 cp --no-progress --content-encoding gzip --content-disposition "attachment; filename=\"nodeadm\"" _bin/arm64/nodeadm.gz s3://$ARTIFACTS_BUCKET/test-release/${VERSION}/bin/linux/arm64/nodeadm.gz
      
      # Run the e2e tests with versioned paths
      - SANITIZED_CODEBUILD_BUILD_ID=$(echo $CODEBUILD_BUILD_ID | tr ':' '-')
      - sleep $((RANDOM % 30)); # random sleep to introduce some jitter in concurrent test runs
      - ./hack/run-e2e.sh $SANITIZED_CODEBUILD_BUILD_ID $AWS_REGION $KUBERNETES_VERSION $CNI s3://$ARTIFACTS_BUCKET/test-release/${VERSION}/bin/linux/amd64/nodeadm.gz s3://$ARTIFACTS_BUCKET/test-release/${VERSION}/bin/linux/arm64/nodeadm.gz $LOGS_BUCKET e2e-artifacts

reports:
  e2e-reports:
    files:
      - e2e-artifacts/reports/junit-nodeadm.xml
    file-format: "JUNITXML"
  conformance-reports:
    files:
      - e2e-artifacts/conformance/junit-conformance.xml
    file-format: "JUNITXML"
artifacts:
  files:
  - "e2e-artifacts/*"
